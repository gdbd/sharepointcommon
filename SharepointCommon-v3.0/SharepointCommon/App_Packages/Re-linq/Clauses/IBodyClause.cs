// Copyright (c) rubicon IT GmbH, www.rubicon.eu
//
// See the NOTICE file distributed with this work for additional information
// regarding copyright ownership.  rubicon licenses this file to you under 
// the Apache License, Version 2.0 (the "License"); you may not use this 
// file except in compliance with the License.  You may obtain a copy of the 
// License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the 
// License for the specific language governing permissions and limitations
// under the License.
// 
using System;

namespace Remotion.Linq.Clauses
{
  /// <summary>
  /// Represents a clause in a <see cref="QueryModel"/>'s <see cref="QueryModel.BodyClauses"/> collection. Body clauses take the items generated by 
  /// the <see cref="QueryModel.MainFromClause"/>, filtering (<see cref="WhereClause"/>), ordering (<see cref="OrderByClause"/>), augmenting 
  /// (<see cref="AdditionalFromClause"/>), or otherwise processing them before they are passed to the <see cref="QueryModel.SelectClause"/>.
  /// </summary>
  public interface IBodyClause : IClause
  {
    /// <summary>
    /// Accepts the specified visitor by calling one of its Visit... methods.
    /// </summary>
    /// <param name="visitor">The visitor to accept.</param>
    /// <param name="queryModel">The query model in whose context this clause is visited.</param>
    /// <param name="index">The index of this clause in the <paramref name="queryModel"/>'s <see cref="QueryModel.BodyClauses"/> collection.</param>
    void Accept (IQueryModelVisitor visitor, QueryModel queryModel, int index);

    /// <summary>
    /// Clones this clause, registering its clone with the <paramref name="cloneContext"/> if it is a query source clause.
    /// </summary>
    /// <param name="cloneContext">The clones of all query source clauses are registered with this <see cref="CloneContext"/>.</param>
    /// <returns>A clone of this clause.</returns>
    IBodyClause Clone (CloneContext cloneContext);
  }
}
